<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	<http pattern="/resources/**" security="none"></http>
	<http auto-config="true" use-expressions="true" entry-point-ref="userAuthenticationEntryPoint">

		<intercept-url pattern="/write" access="permitAll"/>

		<intercept-url pattern="/main" access="permitAll" />
		<intercept-url pattern="/idCheck" access="permitAll" />
		<intercept-url pattern="/regiMail" access="permitAll" />
		<intercept-url pattern="/register" access="permitAll" />
		<intercept-url pattern="/regiMail_check" access="permitAll" />
		<intercept-url pattern="/hospInfoBoard" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		
		<!-- 공지사항 -->
		<intercept-url pattern="/noticeList" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/noticeWritePage" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/noticeWrite" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/noticeContentPage" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/deleteNotice" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/updateNoticePage" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/updateNotice" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/likeAction" access="hasRole('ROLE_ADMIN')"/>

		<!-- 공지사항 관련(권한 미설정) -->
		<intercept-url pattern="/noticeList" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/noticeWritePage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/noticeWrite" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/noticeContentPage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/deleteNotice" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/updateNoticePage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<intercept-url pattern="/updateNotice" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />

		<!-- 자유게시판 관련(권한 미설정) -->
		<intercept-url pattern="/fmbList" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/fmbWritePage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/fmbWrite" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/fmbContentPage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/deleteList" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/updateListPage" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/updateList" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<intercept-url pattern="/showboard" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		
		<!-- 관리자 페이지 -->
		<intercept-url pattern="/memberManagement" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/userInfo" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/deleteUser" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url method="POST" pattern="/changePassword" access="hasAnyRole('ROLE_ADMIN')"/>

		<intercept-url pattern="memberManagement" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="userInfo" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="deleteUser" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="changePassword" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>

		
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />

		<form-login username-parameter="id" password-parameter="pw"
			login-page="/main" authentication-failure-url="/main?error=true"
			authentication-success-handler-ref="userLoginSuccessHandler" />

		<access-denied-handler ref="userDeniedHandler" />

		<logout success-handler-ref="userLogoutSuccessHandler" invalidate-session="true" />


		<session-management invalid-session-url="/main">
			<concurrency-control max-sessions="1" expired-url="/main" session-registry-ref="sessionRegistry"/>
		</session-management>
	</http>

	<beans:bean id="userLoginSuccessHandler"
		class="com.crossit.hcc.service.UserLoginSuccessHandler"></beans:bean>
	<beans:bean id="userLogoutSuccessHandler"
		class="com.crossit.hcc.service.UserLogoutSuccessHandler"></beans:bean>

	<beans:bean id="userDeniedHandler" class="com.crossit.hcc.service.UserDeniedHandler"></beans:bean>

	<beans:bean id="userAuthenticationEntryPoint"
		class="com.crossit.hcc.service.UserAuthenticationEntryPoint"></beans:bean>
		
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />


	<authentication-manager>
		<authentication-provider user-service-ref="UserLoad" />
	</authentication-manager>




</beans:beans>
